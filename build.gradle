plugins {
	id 'org.springframework.boot' version '2.5.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'nu.studer.jooq' version '5.2.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
    mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    // jooqGenerator 'org.xerial:sqlite-jdbc:3.34.0'
	jooqGenerator 'org.postgresql:postgresql:42.2.22','travelhub:jooq-plural-to-singular-naming:1.0-SNAPSHOT'
}

jooq {
    version = '3.14.7'  // default (can be omitted)
    edition = nu.studer.gradle.jooq.JooqEdition.OSS  // default (can be omitted)

    configurations {
        main {  // name of the jOOQ configuration
            generateSchemaSourceOnCompilation = true  // default (can be omitted)

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/realworld'
                    user = 'postgres'
                    password = 'welcome'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                    }
                    generate {
                        deprecated = true
                        records = true
                        immutablePojos = true
                        fluentSetters = true
						jpaAnnotations = false
                    }
                    target {
                        packageName = 'nu.studer.sample'
                        //directory = 'src/main/java'  // default (can be omitted)
                    }
                    strategy.name = 'org.travelhub.jooq.plugins.naming.PluralToSingularNamingStrategy'
                }
            }
        }
    }
}

tasks.named('generateJooq').configure { allInputsDeclared = true }

test {
	useJUnitPlatform()
}
